{"remainingRequest":"/var/www/html/NodeVue/project1/client/node_modules/babel-loader/lib/index.js!/var/www/html/NodeVue/project1/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/NodeVue/project1/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/NodeVue/project1/client/src/views/Contact.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/NodeVue/project1/client/src/views/Contact.vue","mtime":1583517289421},{"path":"/var/www/html/NodeVue/project1/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/NodeVue/project1/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/NodeVue/project1/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/NodeVue/project1/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCmltcG9ydCB7IFJlcG9zaXRvcnlGYWN0b3J5IH0gZnJvbSAiQC9yZXBvc2l0b3J5L1JlcG9zaXRvcnlGYWN0b3J5IjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbmZvOiB0aGlzLiRyb3V0ZS5xdWVyeSwKICAgICAgbmFtZTogIiIsCiAgICAgIHVzZXJuYW1lOiAiIgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHN1Ym1pdDogZnVuY3Rpb24gc3VibWl0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgbmFtZTogdGhpcy5uYW1lLAogICAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lCiAgICAgIH07CiAgICAgIFJlcG9zaXRvcnlGYWN0b3J5LmNvbnRhY3QoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCJzdG9yZURhdGEiLCByZXMuZGF0YSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9Cn07"},{"version":3,"sources":["Contact.vue"],"names":[],"mappings":";;;;AAIA,SAAA,iBAAA,QAAA,gCAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KAAA,MAAA,CAAA,KADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,UAAA,IAAA,GAAA;AACA,QAAA,IAAA,EAAA,KAAA,IADA;AAEA,QAAA,QAAA,EAAA,KAAA;AAFA,OAAA;AAIA,MAAA,iBAAA,CAAA,OAAA,CAAA,IAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,WAAA,EAAA,GAAA,CAAA,IAAA;AACA,OAFA;AAGA;AATA,GARA;AAmBA,EAAA,OAnBA,qBAmBA,CAAA;AAnBA,CAAA","sourcesContent":["<template>\n  <div></div>\n</template>\n<script>\nimport { RepositoryFactory } from \"@/repository/RepositoryFactory\";\nexport default {\n  data() {\n    return {\n      info: this.$route.query,\n      name: \"\",\n      username: \"\"\n    };\n  },\n  methods: {\n    submit() {\n      let data = {\n        name: this.name,\n        username: this.username\n      };\n      RepositoryFactory.contact(data).then(res => {\n        this.$store.dispatch(\"storeData\", res.data);\n      });\n    }\n  },\n  created() {}\n};\n</script>\n"],"sourceRoot":"src/views"}]}