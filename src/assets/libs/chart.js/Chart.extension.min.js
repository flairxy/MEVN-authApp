Chart.elements.Rectangle.prototype.draw = function () { var t; var e; var i; var r; var h; var o; var d; var a = this._chart.ctx; var n = this._view; var l = n.borderWidth; if (d = n.horizontal ? (t = n.base, e = n.x, i = n.y - n.height / 2, r = n.y + n.height / 2, h = t < e ? 1 : -1, o = 1, n.borderSkipped || 'left') : (t = n.x - n.width / 2, e = n.x + n.width / 2, h = 1, o = (i = n.y) < (r = n.base) ? 1 : -1, n.borderSkipped || 'bottom'), l) { var g = Math.min(Math.abs(t - e), Math.abs(i - r)); var b = (l = g < l ? g : l) / 2; var v = t + (d !== 'left' ? b * h : 0); var w = e + (d !== 'right' ? -b * h : 0); var u = i + (d !== 'top' ? b * o : 0); var C = r + (d !== 'bottom' ? -b * o : 0); v !== w && (i = u, r = C), u !== C && (t = v, e = w) }a.beginPath(), a.fillStyle = n.backgroundColor, a.strokeStyle = n.borderColor, a.lineWidth = l; var c = [[t, r], [t, i], [e, i], [e, r]]; var f = ['bottom', 'left', 'top', 'right'].indexOf(d, 0); function T (t) { return c[(f + t) % 4] }f === -1 && (f = 0); var s = T(0); a.moveTo(s[0], s[1]); for (var p = 1; p < 4; p++) { var m; s = T(p), nextCornerId = p + 1, nextCornerId == 4 && (nextCornerId = 0), nextCorner = T(nextCornerId), width = c[2][0] - c[1][0], height = c[0][1] - c[1][1], x = c[1][0], y = c[1][1], (m = 6) > height / 2 && (m = height / 2), m > width / 2 && (m = width / 2), a.moveTo(x + m, y), a.lineTo(x + width - m, y), a.quadraticCurveTo(x + width, y, x + width, y + m), a.lineTo(x + width, y + height - m), a.quadraticCurveTo(x + width, y + height, x + width - m, y + height), a.lineTo(x + m, y + height), a.quadraticCurveTo(x, y + height, x, y + height - m), a.lineTo(x, y + m), a.quadraticCurveTo(x, y, x + m, y) }a.fill(), l && a.stroke() }
